- name: 'Install packages to build python'
  apt:
    pkg:
      - build-essential
#      - cargo
      - curl
      - gcc
      - libffi-dev
      - libgdbm-dev
      - libncurses5-dev
      - libnss3-dev
      - libreadline-dev
      - libsqlite3-dev
      - libssl-dev
      - libffi-dev
      - libbz2-dev
      - tk-dev
      - zlib1g-dev
      - pipx
  become: true

# Install Python with pyenv
- name: 'Check if pyenv is installed'
  ansible.builtin.stat:
    path: '{{ ansible_env.HOME }}/.pyenv/bin/pyenv'
    get_checksum: false
  register: pyenv_bin

- name: 'Install Pyenv'
  block:
  - name: 'Download pyenv installer'
    get_url:
        url: https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
        dest: /tmp/pyenv-installer

  - name: 'Make pyenv-installer executable'
    file: dest=/tmp/pyenv-installer mode=a+x

  - name: 'Check if pyenv exists'
    ansible.builtin.stat:
      path: '{{ ansible_env.HOME }}/.pyenv'
      get_checksum: false
    register: pyenv_dir

  - name: 'Install pyenv'
    shell: /tmp/pyenv-installer
    become: true
    become_user: '{{ ansible_user }}'
    when: not pyenv_dir.stat.exists
  when: not pyenv_bin.stat.exists


#- name: 'Source pyenv'
#  command: 'source {{ ansible_user }}/.bashrc.d/pyenv.sh'
#  tags: pyenv-update

- name: 'Update pyenv'
  command: '{{ ansible_env.HOME }}/.pyenv/bin/pyenv update'
  tags: pyenv-update

- name: 'Install Python versions'
  include_tasks: python-pyenv-install.yml
  loop: "{{ python_versions }}"
  loop_control:
    loop_var: python


- name: 'Update .bashrc'
  blockinfile:
    path: '{{ ansible_env.HOME }}/.bashrc'
    marker: '# ANSIBLE MANAGED BLOCK'
    block: |
      if [ -d "$HOME/.pyenv/bin" ]; then
          PATH="$PATH:$HOME/.pyenv/bin"
      fi

      command -v pyenv >/dev/null 2>&1 && {
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init --path)"
      }
